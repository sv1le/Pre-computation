
/// factorial

const int M = 1e9 + 7;
const int N = 1e5 + 10;
ll fact[N];

int main() {
    fact[0] = fact[1] = 1;
    for (int i = 2; i < N; ++i)
    {
        fact[i] = fact[i - 1] * i;
    }
    ll t;
    cin >> t;
    while (t--) {
        ll n;
        cin >> n;
        cout << fact[n];
    }
}


///using hashing to search element\

const int N = 1e7 + 10;
ll hsh[N];

int main() {
    ll n;
    cin >> n;
    ll arr[n];
    FOR(i, n) {
        cin >> arr[i];
        hsh[arr[i]]++;
    }
    ll q;
    cin >> q;
    while (q--) {
        ll x;
        cin >> x;
        cout << hsh[x] << "\n";
    }
}


// using prefix sum to sum the array

const int N = 1e7 + 10;
ll arr[N];
ll pf[N];

int main() {
    ll n;
    cin >> n;
    for (int i = 1; i <= n; ++i) {
        cin >> arr[i];
        pf[i] = pf[i - 1] + arr[i];
    }
    ll q;
    cin >> q;
    while (q--) {
        ll l, r;
        cin >> l >> r;
        cout << pf[r] - pf[l - 1] << "\n";
    }
}
